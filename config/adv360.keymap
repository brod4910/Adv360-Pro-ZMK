
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

    
#define DEFAULT 0
#define CODE 1
#define KEYPAD 2
#define MOD 3
        
/ {
    behaviors {
        #include "macros.dtsi"
        #include "version.dtsi"

        hm_l: homerow_left_mods {
          compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS";
          #binding-cells = <2>;
          tapping-term-ms = <200>;
          flavor = "tap-preferred";
          bindings = <&kp>, <&kp>;
        };

        hm_r: homerow_right_mods {
          compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS";
          #binding-cells = <2>;
          tapping-term-ms = <200>;
          flavor = "tap-preferred";
          bindings = <&kp>, <&kp>;
        };

        lt_kp: layer_kp {
          compatible = "zmk,behavior-hold-tap";
          label = "LAYERTAP";
          #binding-cells = <2>;
          tapping-term-ms = <200>;
          flavor = "tap-preferred";
          bindings = <&tog>, <&kp>;
        };

        lt_tog: layer_tog {
          compatible = "zmk,behavior-hold-tap";
          label = "LAYERTAP-tog";
          #binding-cells = <2>;
          tapping-term-ms = <250>;
          flavor = "tap-preferred";
          bindings = <&tog>, <&tog>;
        };
    };


    // Home row mods
    #define _A_CTL &hm_l LCTRL A  // Shift on pinkey fingers
    #define _P_CTL &hm_r RCTRL  P
    #define _S_CMD &hm_l LGUI S   // Command on ring fingers
    #define _L_CMD &hm_r RGUI L
    #define _D_OPT &hm_l LALT D   // Option on middle finger
    #define _K_OPT &hm_r RALT K
    #define _F_SFT &hm_l RSHFT F  // Control on index finger
    #define _J_SFT &hm_r RSHFT J

    #define _LBKT_CTL &hm_l LCTRL LBKT  // Shift on pinkey fingers
    #define _RIGHT_CTL &hm_r RCTRL RIGHT
    #define _RBKT_CMD &hm_l LGUI RBKT   // Command on ring fingers
    #define _DOWN_CMD &hm_r RGUI DOWN
    #define _LBRC_OPT &hm_l LALT LBRC   // Option on middle finger
    #define _UP_OPT &hm_r RALT UP
    #define _RBRC_SFT &hm_l LSHFT RBRC  // Control on index finger
    #define _LEFT_SFT &hm_r RSHFT LEFT

    #define _G_LAYER_1 &lt_kp CODE G
    #define _H_LAYER_1 &lt_kp CODE H

    #define _E_LAYER_2 &lt_kp KEYPAD E
    #define _I_LAYER_2 &lt_kp KEYPAD I

    #define _N8_LAYER_0 &lt_kp KEYPAD KP_N8
    #define _AMPS_LAYER_0 &lt_kp KEYPAD AMPS

    #define _KP_LAYER_0 &lt_kp CODE KP_MINUS

    #define _KEYPAD &tog KEYPAD
    #define _DEFAULT &tog DEFAULT

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
 &kp EQUAL  &kp EXCL  &kp AT_SIGN  &kp POUND  &kp DLLR  &kp PERCENT     &tog CODE                                                                 &mo MOD  &kp CARET  &kp AMPS &kp STAR &kp LPAR    &kp RPAR  &kp MINUS
   &kp ESC   &kp Q     &kp W     _E_LAYER_2   &kp R   &kp T           &mo KEYPAD                                                                 &mo KEYPAD  &kp Y   &kp U   _I_LAYER_2  &kp O  &kp SEMI   &kp BSLH
   &kp TAB   _A_CTL    _S_CMD  _D_OPT  _F_SFT   _G_LAYER_1        &mo CODE       &kp LGUI   &kp LCTRL                   &kp RALT   &kp RGUI      &mo CODE   _H_LAYER_1   _J_SFT      _K_OPT     _L_CMD     _P_CTL    &kp SQT
 &kp RSHFT      &kp Z     &kp X     &kp C      &kp V   &kp B                                 &kp HOME                   &kp PG_UP                         &kp N   &kp M  &kp COMMA   &kp DOT  &kp FSLH  &kp RSHFT
     &none  &kp GRAVE  &none  &kp LEFT  &kp RIGHT                    &kp BSPC   &kp DEL  &kp END                 &kp PG_DN  &kp ENTER  &kp SPACE          &kp UP   &kp DOWN  &kp LBKT  &kp RBKT      &none
            >;
        };

        layer_code {
            bindings = <
    &trans   &trans   &trans   &trans    &trans    &trans                &trans                                                               &mo MOD   &trans         &trans     &trans      &trans     &trans         &trans 
   &trans   &trans  &kp LBKT  &kp AMPS   &kp RBKT   &kp KP_PLUS          &trans                                                               &trans     &kp KP_PLUS    &kp LBKT   &kp AMPS    &kp RBKT   &trans         &trans 
   &trans   &kp KP_EQUAL   &kp LPAR   &kp COLON  &kp RPAR  _KP_LAYER_0   &mo DEFAULT       &kp LCTRL   &kp LALT    &kp LGUI   &kp RCTRL        &mo DEFAULT  _KP_LAYER_0   &kp LPAR   &kp COLON   &kp RPAR   &kp KP_EQUAL   &trans
    &trans   &kp EXCL   &kp LBRC   &kp PIPE    &kp RBRC    &kp POUND                             &kp HOME          &kp PG_UP                               &kp POUND      &kp LBRC   &kp PIPE    &kp RBRC   &kp EXCL       &trans
     &none  &trans   &none    &trans    &trans                            &kp BSPC    &kp DEL   &kp END             &kp PG_DN  &kp ENTER  &kp SPACE                   &trans     &trans      &trans     &trans         &none
            >;
        };

        layer_keypad {
            bindings = <
   &kp F1       &kp F2    &kp F3    &kp F4     &kp F5  &kp F6             &trans                                                                &mo MOD &kp F7        &kp F8        &kp F9         &kp F10       &kp F11         &kp F12
   &trans      &trans    &kp LBKT _AMPS_LAYER_0 &kp RBKT   &kp KP_PLUS    &to DEFAULT                                                              &to DEFAULT   &kp KP_PLUS   &kp KP_N7     _N8_LAYER_0      &kp KP_N9     &kp KP_DIVIDE   &kp BSLH
   &trans      &kp KP_EQUAL  &kp LPAR   &kp COLON  &kp RPAR  &kp KP_EQUAL &to CODE   &kp LCTRL  &kp LALT                  &kp LGUI  &kp RCTRL      &to CODE   &kp KP_MINUS  &kp KP_N4     &kp KP_N5      &kp KP_N6     &kp KP_EQUAL    &kp ENTER
   &trans      &kp EXCL   &kp LBRC   &kp PIPE    &kp RBRC    &kp POUND               &kp HOME                             &kp PG_UP                          &kp COMMA     &kp KP_N1     &kp KP_N2      &kp KP_N3     &kp KP_MULTIPLY &kp RSHFT
   &none       &trans  &none  &trans  &trans                    &kp BSPC    &kp DEL   &kp END                             &kp PG_DN  &kp ENTER  &kp SPACE         &kp KP_DOT    &kp KP_N0      &kp KP_DOT     &none         &kp LNLCK
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &none                                                                          &trans   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none            &bootloader                                                                     &bootloader   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                  &none   &none   &none                  &bt BT_CLR       &none  &rgb_ug RGB_MEFS_CMD 5   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none    &macro_ver         &none                                  &none                       &none                                       &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none                                &none   &none   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG          &bl BL_INC  &bl BL_DEC   &none   &none   &none
            >;
        };

    };
};
